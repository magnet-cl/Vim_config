#!/usr/bin/env python

import sys
import json
import os
import re
import shlex
import subprocess

vimdir = os.path.expandvars('$HOME/.vim')


def return_failed(msg):
    print json.dumps({
        "failed": True,
        "msg": msg,
    })
    sys.exit(1)


def return_changed(userdict):
    output = {"changed": True}
    output.update(userdict)
    print json.dumps(output)
    sys.exit(0)


def neobundle_installed():
    proc = subprocess.Popen(['git', 'submodule', 'status'],
                            cwd=vimdir,
                            stdout=subprocess.PIPE,
                            stderr=subprocess.PIPE)
    out, err = proc.communicate()
    match = re.search(r"^[ U+-][0-9a-f]{5,40}", out)
    return match and out[0] == ' '


def install_neobundle():
    proc = subprocess.Popen(['git', 'submodule', 'update', '--init'],
                            cwd=vimdir,
                            stdout=subprocess.PIPE,
                            stderr=subprocess.PIPE)
    out, err = proc.communicate()
    if proc.returncode != 0:
        return_failed(err)
    return out


def run_neobundle_cmd(neobundle_cmd):
    cmd = ('vim -N -u vimrc -U NONE -i NONE '
           '-c "try | %s | visual | finally | qall! | endtry" '
           '-V1 -e -s' % neobundle_cmd)
    proc = subprocess.Popen(cmd,
                            cwd=vimdir,
                            shell=True,
                            stdout=subprocess.PIPE,
                            stderr=subprocess.PIPE)
    out, err = proc.communicate()
    return out, err, proc.returncode


def get_missing_plugins():
    out, err, rc = run_neobundle_cmd('NeoBundleCheck')
    if rc != 0:
        return_failed(err)
    match = re.search(r"Not installed bundles:\s+\[(.*)\]", err)
    if match:
        return match.group(1).replace("'", "").split(', ')
    else:
        return None


def install_missing_plugins(missing_plugins):
    cmd = 'NeoBundleUpdate!'
    if missing_plugins:
        cmd += ' ' + ' '.join(missing_plugins)
    out, err, rc = run_neobundle_cmd(cmd)
    if rc != 0:
        return_failed(err)
    return err


neobundle = False
plugins = False


args_file = sys.argv[1]
args_data = file(args_file).read()

arguments = shlex.split(args_data)

for arg in arguments:
    if "=" in arg:
        (key, value) = arg.split("=")

        if key == "name":
            if value == "neobundle":
                neobundle = True
            if value == "all":
                plugins = True


if not neobundle and not plugins:
    return_failed("No name set")

if not neobundle_installed():
    if not neobundle:
        return_failed("NeoBundle not installed")
    out = install_neobundle()
    if not plugins:
        match = re.search(r"'[0-9a-f]{5,40}'$", out)
        rev = match.group(0)
        return_changed({"rev": rev[1:9]})


if plugins:
    missing_plugins = get_missing_plugins()
    if missing_plugins:
        install_missing_plugins(missing_plugins)
        return_changed({"bundles": missing_plugins})


print json.dumps({
    "changed": False
})
